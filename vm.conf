## Were our sets are
openbsd="/home/VMs/sets/snapshots/amd64/"
linux="/home/VMs/linux/"

## VMs Networking
switch "local" {
	interface bridge0
	# I'll leave these here for now until I work out if they are useful
    # add tap0
	# add tap1
	# add tap2
}

## VMs
# This one is ready to get installed
vm "OpenBSD_Ports.vm" {
	## We want this one start at boot
	disable
	## Memory
	memory 2G

	boot $openbsd "bsd.rd"

	## You can create the img disk with
	## vmctl create "/home/VMs/OpenBSD_Ports.img" -s 40G
	disk "/home/VMs/OpenBSD_Ports.img"
	disk $openbsd "install63.fs"

	## Network
	interface { switch "local" }
}

# This one already installed
vm "OpenBSD_Test.vm" {
	disable
	memory 512M

	disk "/VMs/OpenBSD_Test.img"

	interface { switch "local" }
}

# This is an Alpine Linux ready to be installed
# cd /home/VMs/linux/
# ftp -V https://nl.alpinelinux.org/alpine/v3.7/releases/x86_64/alpine-virt-3.7.0-x86_64.iso
# vmctl create "/home/VMs/Alpine_Linux.img" -s 25G
# You need to install Alpine with the command: setup-alpine (from vmctl console ID_VM)
# For debian on vmm(4) you can follow edd@ recipe on:
# https://github.com/vext01/recipes/blob/master/recipes/debian9_inside_vmm.md
# 
vm "Alpine_Linux.vm" {
	owner h3artbl33d
	disable
	memory 1024M
    ## >6.3 'cdrom' is avariable for install
	## <6.2 we use 'disk' for .iso and install
	cdrom $linux "alpine-virt-3.7.0-x86_64.iso"
	disk "/home/VMs/Alpine_Linux.img"
	interface { switch "local" }
}
